# pre-commit workflow
#
# Ensures the codebase passes the pre-commit stack.

name: Python CI

on: [push]

jobs:
  python_ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11" ]
      fail-fast: false

    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_RITUAL_PYARWEAVE }}

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_JSON }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: 'Get gcp env vars'
        run: echo '${{ secrets.GCP_ENV }}' > gcp.env

      - name: Checkout
        uses: actions/checkout@v4

      # pull submodules manually since some are private
      - run: |
          git submodule sync --recursive
          git -c protocol.version=2 submodule update --init --force --depth=1 --recursive

      - name: 'Ensure file exists'
        run: '[ -f gcp.env ] && echo "File exists" && ls || { echo "File does not exist"; exit 1; }'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        run: python -m pip install uv

      - name: Create virtual environment
        run: uv venv

      - name: Activate virtual environment
        run: |
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Generate UV env file
        run: make generate-uv-env-file && cat uv.env

      - name: Install dependencies
        run: source uv.env && uv pip install -r projects/infernet_ml/requirements.lock

      - name: Install ritual_pyarweave
        run: uv pip install -e projects/ritual_pyarweave

      - name: Run pre-commit hooks
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Run tests
        env:
          PYTHONPATH: projects/infernet_ml/src:projects/ritual_pyarweave/src
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          MODEL_OWNER: ${{ secrets.MODEL_OWNER }}
        run: pytest projects/infernet_ml/test
